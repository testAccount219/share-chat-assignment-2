package com.sharechat.anandpandey.sharechatassignment;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.os.AsyncTask;import android.support.annotation.IntegerRes;import android.support.constraint.ConstraintLayout;import android.support.v7.app.ActionBar;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.AndroidException;import android.util.Log;import android.util.TypedValue;import android.view.View;import android.view.WindowManager;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import org.json.JSONArray;import org.json.JSONObject;import java.io.InputStream;import java.net.HttpURLConnection;import java.net.URL;import java.util.ArrayList;import java.util.Objects;public class HomeActivity extends AppCompatActivity {    private RecyclerView myRecyclerView;    private LinearLayoutManager linearLayoutManager;    private RecyclerViewAdapter myRecyclerViewAdapter;    private HttpRequestServiceReciever httpRequestServiceReciever;    private DataFetchServiceReciever dataFetchServiceReciever;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        myRecyclerView = new RecyclerView(this);        linearLayoutManager =  new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);        myRecyclerViewAdapter = new RecyclerViewAdapter(this);        myRecyclerView.setAdapter(myRecyclerViewAdapter);        myRecyclerView.setLayoutManager(linearLayoutManager);        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,                WindowManager.LayoutParams.FLAG_FULLSCREEN);        getSupportActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);        getSupportActionBar().setCustomView(R.layout.abs_layout);//        setContentView(R.layout.activity_home);        IntentFilter filter = new IntentFilter(HttpRequestServiceReciever.PROCESS_RESPONSE);        filter.addCategory(Intent.CATEGORY_DEFAULT);        httpRequestServiceReciever = new HttpRequestServiceReciever();        registerReceiver(httpRequestServiceReciever, filter);        Intent httpIntent = new Intent(HomeActivity.this, HttpRequestService.class);        Log.v("INof","cALLING INTENT");        startService(httpIntent);        Log.v("INof","After cALLING INTENT");        setContentView(myRecyclerView);        customiseActionBar();    }    private void customiseActionBar() {        int height = 0;        TypedValue tv = new TypedValue();        if (getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true))        {            height = TypedValue.complexToDimensionPixelSize(tv.data,getResources().getDisplayMetrics());        }        TextView actionBarText = (TextView) findViewById(R.id.trending_bar);    }    public void onItemClick(RecyclerViewAdapter.ItemHolder item, int position) {        Toast.makeText(this,                position + " : " + item.getItemName(),                Toast.LENGTH_SHORT).show();    }    @Override    public void onDestroy() {        this.unregisterReceiver(httpRequestServiceReciever);        this.unregisterReceiver(dataFetchServiceReciever);        super.onDestroy();    }    public class HttpRequestServiceReciever extends BroadcastReceiver{        public static final String PROCESS_RESPONSE = "PROCESS_RESPONSE";        @Override        public void onReceive(Context context, Intent intent) {            String responseString = intent.getStringExtra(HttpRequestService.RESPONSE_MESSAGE);            JSONObject responseJson = new JSONObject();            try {                int i;                responseJson = new JSONObject(responseString);                JSONArray data = (JSONArray) responseJson.get("data");                for(i = 0; i < data.length();  i  += 1) {                    myRecyclerViewAdapter.add(i, (JSONObject) data.get(i));                }                myRecyclerViewAdapter.add(i, new JSONObject("{\"type\":\"Button\"}"));            } catch (org.json.JSONException e) {                Log.v("Error", e.toString());            }        }    }    public class DataFetchServiceReciever extends BroadcastReceiver {        public static final String PROCESS_RESPONSE = "PROCESS_RESPONSE";        @Override        public void onReceive(Context context, Intent intent) {            String responseString = intent.getStringExtra(HttpRequestService.RESPONSE_MESSAGE);            try {            } catch (Exception e) {            }        }    }}