package com.sharechat.anandpandey.sharechatassignment;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.os.AsyncTask;import android.support.annotation.IntegerRes;import android.support.constraint.ConstraintLayout;import android.support.v7.app.ActionBar;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.AndroidException;import android.util.Log;import android.util.TypedValue;import android.view.View;import android.view.WindowManager;import android.widget.TextView;import android.widget.Toast;import org.json.JSONArray;import org.json.JSONObject;public class HomeActivity extends AppCompatActivity {    private RecyclerView myRecyclerView;    public int lastPostFetched = 0;    public static String LAST_POST_FETCHED = "lastPostFetched";    private LinearLayoutManager linearLayoutManager;    public RecyclerViewAdapter myRecyclerViewAdapter;    private DataFetchServiceReciever dataFetchServiceReciever;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        myRecyclerView = new RecyclerView(this);        linearLayoutManager =  new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);        myRecyclerViewAdapter = new RecyclerViewAdapter(this);        myRecyclerView.setAdapter(myRecyclerViewAdapter);        myRecyclerView.setLayoutManager(linearLayoutManager);        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,                WindowManager.LayoutParams.FLAG_FULLSCREEN);        getSupportActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);        getSupportActionBar().setCustomView(R.layout.abs_layout);        startDataFetchIntent();        setContentView(myRecyclerView);        customiseActionBar();    }    private void customiseActionBar() {        int height = 0;        TypedValue tv = new TypedValue();        if (getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true))        {            height = TypedValue.complexToDimensionPixelSize(tv.data,getResources().getDisplayMetrics());        }        TextView actionBarText = (TextView) findViewById(R.id.trending_bar);    }    public void onItemClick(RecyclerViewAdapter.ItemHolder item, int position) {        Toast.makeText(this,                position + " : " + item.getItemName(),                Toast.LENGTH_SHORT).show();    }    @Override    public void onDestroy() {        this.unregisterReceiver(dataFetchServiceReciever);        super.onDestroy();    }    public class DataFetchServiceReciever extends BroadcastReceiver {        public static final String PROCESS_RESPONSE = "PROCESS_RESPONSE_DATA";        @Override        public void onReceive(Context context, Intent intent) {            String responseString = intent.getStringExtra(DataFetchService.RESPONSE_MESSAGE);            JSONObject responseJson = new JSONObject();            try {                int i;                responseJson = new JSONObject(responseString);                JSONArray data = (JSONArray) responseJson.get("data");                if(data.length() > 0 && lastPostFetched != 0) {                    myRecyclerViewAdapter.remove(lastPostFetched);                }                lastPostFetched = intent.getIntExtra(LAST_POST_FETCHED, lastPostFetched);                for(i = 0; i < data.length();  i  += 1) {                    JSONObject jsonObject = new JSONObject(data.get(i).toString());                    myRecyclerViewAdapter.add(jsonObject.getInt("id") - 1, jsonObject);                }                if(data.length() != 0) {                    myRecyclerViewAdapter.add(lastPostFetched, new JSONObject("{\"type\":\"Button\"}"));                } else {                    myRecyclerViewAdapter.remove(lastPostFetched);                }            } catch (org.json.JSONException e) {                Log.v("Error", e.toString());            }        }    }    public void startDataFetchIntent() {        IntentFilter filter = new IntentFilter(DataFetchServiceReciever.PROCESS_RESPONSE);        filter.addCategory(Intent.CATEGORY_DEFAULT);        dataFetchServiceReciever = new DataFetchServiceReciever();        registerReceiver(dataFetchServiceReciever, filter);        Intent dataIntent = new Intent(HomeActivity.this, DataFetchService.class);        Log.v("INFO","CALLING INTENT");        dataIntent.putExtra(LAST_POST_FETCHED, lastPostFetched);        startService(dataIntent);        Log.v("INFO","After CALLING INTENT");    }    public void loadMore(View view) {        startDataFetchIntent();    }}